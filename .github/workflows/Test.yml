name: 'Test'

on:
  push:
    branches: [ toolversions ]
  workflow_dispatch:
  
jobs:

  # Get docker image tool versions
  toolversions:

    name: Get image tool versions
    runs-on: ubuntu-latest

    strategy:

      # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        include:
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'debian' || 'debian-develop' }}
            file: debian.ver
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'alpine' || 'alpine-develop' }}
            file: alpine.ver
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'savoury' || 'savoury-develop' }}
            file: savoury.ver
          - tag: ${{ endsWith(github.ref, 'refs/heads/main') && 'arch' || 'arch-develop' }}
            file: arch.ver

    steps:

    # https://github.com/marketplace/actions/checkout      
    - name: Checkout
      uses: actions/checkout@v3
  
    # https://github.com/marketplace/actions/docker-run-action      
    - name: Write image tool versions to file
      uses: addnab/docker-run-action@v3
      with:
        image: docker.io/ptr727/plexcleaner:${{ matrix.tag }}
        options: --volume ${{ runner.temp }}/versions:/versions
        run: |
          echo PlexCleaner: $(/PlexCleaner/PlexCleaner --version) > /versions/${{ matrix.file }}
          echo dotNET: $(dotnet --version) >> /versions/${{ matrix.file }}
          echo HandBrakeCLI: $(HandBrakeCLI --version) >> /versions/${{ matrix.file }}
          echo MediaInfo: $(mediainfo --version) >> /versions/${{ matrix.file }}
          echo MkvMerge: $(mkvmerge --version) >> /versions/${{ matrix.file }}
          echo FfMpeg: $(ffmpeg -version) >> /versions/${{ matrix.file }}

    - name: Print versions
      run: cat ${{ runner.temp }}/versions/${{ matrix.file }}

    # https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload version artifacts
      uses: actions/upload-artifact@v3
      with:
        name: versions
        path: ${{ runner.temp }}/versions/${{ matrix.file }}

  # Update Docker README.md
  updatereadme:

    name: Update docker README.md
    runs-on: ubuntu-latest
    needs: toolversions

    steps:

    # https://github.com/marketplace/actions/checkout      
    - name: Checkout 
      uses: actions/checkout@v3

    # https://github.com/marketplace/actions/download-a-build-artifact
    - name: Download version artifacts
      uses: actions/download-artifact@v3
      with:
        name: versions
        path: ${{ runner.temp }}/versions

    - name: Create README.md from README.m4
      run: m4 --include=${{ runner.temp }}/versions ./Docker/README.m4 > ./Docker/README.md

    # https://github.com/marketplace/actions/git-auto-commit
    - name: Commit generated README.md
      uses: stefanzweifel/git-auto-commit-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file_pattern: ./Docker/README.md
        commit_message: Update generated README.md
