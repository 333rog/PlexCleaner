name: 'Build and Publish Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 'Build and Publish Pipeline'
    runs-on: windows-latest

    steps:

      # Checkout code
      - name: 'Checkout Code'
        uses: actions/checkout@v2
        with:
          # Get all history for version calculation using GitVersion
          fetch-depth: 0

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET Core SDK 3.1'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: 'Setup .NET SDK 5.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      
      # Install GitVersion
      # Requires .NET Core 3.1, does not support .NET 5.0
      # https://github.com/marketplace/actions/gittools
      - name: 'Install GitVersion'
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          # 5.5.1 does not work as expected, use 5.3.7
          # https://github.com/GitTools/GitVersion/issues/2461
          versionSpec: '5.3.x'

      # Run GitVersion
      # https://github.com/marketplace/actions/gittools
      - name: 'Run GitVersion Tool'
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        #with:
        #  additionalArguments: '/diag'
        env: 
          # https://github.com/GitTools/actions/issues/255
          # https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      # Build and publish project to folder
      # Replace version information with GitVersion attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
      - name: 'Build Project'
        run: dotnet publish ./PlexCleaner/PlexCleaner.csproj --output ./PlexCleaner/Artifacts -property:Version=${{ steps.gitversion.outputs.assemblySemVer }} -property:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -property:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} -property:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }} -property:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

      # Zip the output
      - name: 'Zip Output'
        run: 7z.exe a -t7z ./PlexCleaner.7z ./PlexCleaner/Artifacts/

      # Create GitHub release
      # https://github.com/marketplace/actions/automatic-releases
      - name: 'Create GitHub Release'
        # Do not push on pull requests
        if: ${{ github.event_name != 'pull_request' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
          # Only main branch is not a pre-release
          prerelease: ${{ !contains(github.ref, 'origin/main') }}
          files: |
            LICENSE.txt
            README.md
            ./PlexCleaner.7z
      