# TODO : Consolidate BuildPublishPipeline.yml and BuildDockerPipeline.yml

name: 'Build and Publish GitHub Release Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: 'Build and Publish GitHub Release Pipeline'
    runs-on: ubuntu-latest

    steps:

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET SDK 6.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v3
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: 'Run Nerdbank.GitVersioning Tool'
        id: nbgv
        uses: dotnet/nbgv@master

      # Run Unit Tests
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: 'Run Unit Tests'
        run: dotnet test ./PlexCleanerTests/PlexCleanerTests.csproj

      # Build and publish project to ./Publish
      # Set version information attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
      - name: 'Build Project win-x64'
        run: >-
            dotnet publish ./PlexCleaner/PlexCleaner.csproj
            --runtime win-x64
            --self-contained false
            --output ./Publish/win-x64
            --configuration ${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}
      - name: 'Build Project linux-x64'
        run: >-
            dotnet publish ./PlexCleaner/PlexCleaner.csproj
            --runtime linux-x64
            --self-contained false
            --output ./Publish/linux-x64
            --configuration ${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}

      # Zip the output
      - name: 'Zip Output'
        run: 7z a -t7z ./Publish/PlexCleaner.7z ./Publish/*

      # Create GitHub release
      # https://github.com/marketplace/actions/automatic-releases
      - name: 'Create GitHub Release'
        # Do not push on pull requests
        if: ${{ (github.event_name != 'pull_request') }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.nbgv.outputs.SemVer2 }}
          # Only main branch is not a pre-release
          prerelease: ${{ !endsWith(github.ref, 'refs/heads/main') }}
          files: |
            LICENSE
            ./Publish/PlexCleaner.7z
