name: 'Build and Push Docker Image Pipeline'

on:
  push:
    # multiarch test branch only
    branches: [ multiarch ]
  workflow_dispatch:

jobs:

  buildpush:

    name: 'Build and Push Docker Image Pipeline'
    runs-on: ubuntu-latest

    steps:

      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v3
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: 'Run Nerdbank.GitVersioning Tool'
        id: nbgv
        uses: dotnet/nbgv@master

      # Setup QEMU for multi architecture builds
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: 'Setup QEMU'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      # Setup docker build
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: 'Setup Docker Buildx'
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      # Login to Docker Hub
      # https://github.com/marketplace/actions/docker-login
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Login to GitHub Container Registry
      # https://github.com/marketplace/actions/docker-login
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Docker build and push
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: 'Docker Build and Push'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Docker/Debian.dotNET.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ (github.event_name != 'pull_request') }}
          build-args: |
            LABEL_VERSION=${{ steps.nbgv.outputs.SemVer2 }}
            BUILD_CONFIGURATION=${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            BUILD_VERSION=${{ steps.nbgv.outputs.AssemblyVersion }}
            BUILD_FILE_VERSION=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            BUILD_ASSEMBLY_VERSION=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            BUILD_INFORMATION_VERSION=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            BUILD_PACKAGE_VERSION=${{ steps.nbgv.outputs.SemVer2 }}
          tags: |
            docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/plexcleaner:${{ endsWith(github.ref, 'refs/heads/main') && 'debian' || 'debian-develop' }}
            ghcr.io/${{ github.repository_owner }}/plexcleaner:${{ endsWith(github.ref, 'refs/heads/main') && 'debian' || 'debian-develop' }}
