name: 'Build Docker Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]
  schedule:
    # Rebuild docker container 2am every Monday
    - cron: '0 2 * * MON'
  workflow_dispatch:

jobs:
  build:
    name: 'Build Docker Pipeline'
    runs-on: ubuntu-latest

    steps:

      # Match build steps with BuildPublishPipeline.yml
      # TODO: Consolidate pipelines to publish and push in one build

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET SDK 6.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      
      # Install GitVersion
      # Requires .NET 5
      # https://github.com/marketplace/actions/gittools
      - name: 'Setup .NET 5.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: 'Install GitVersion'
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v2
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run GitVersion
      # https://github.com/marketplace/actions/gittools
      - name: 'Run GitVersion Tool'
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: 'Run Nerdbank.GitVersioning Tool'
        id: nbgv
        uses: dotnet/nbgv@master

      # Run Unit Tests
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: 'Run Unit Tests'
        run: dotnet test ./PlexCleaner.Tests/PlexCleaner.Tests.csproj

      # Build and publish project to ./Docker/PlexCleaner
      # Set version information attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
      - name: 'Build Project linux-x64'
        run: |
            dotnet publish ./PlexCleaner/PlexCleaner.csproj \
                --runtime linux-x64 \
                --self-contained false \
                --output ./Docker/PlexCleaner \
                -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }} \
                -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }} \
                -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }} \
                -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }} \
                -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}

      # Setup docker build
      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: 'Setup Docker Buildx'
        uses: docker/setup-buildx-action@v1

      # Login to Docker Hub
      # https://github.com/marketplace/actions/docker-login
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Login to GitHub Container Registry
      # https://github.com/marketplace/actions/docker-login
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Docker build and push
      # TODO : Figure out how to conditionally tag as latest or develop
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: 'Build and Push Latest'
        uses: docker/build-push-action@v2
        # Enable for main branch only
        if: ${{ endsWith(github.ref, 'refs/heads/main') }}
        with:
          context: ./Docker
          file: ./Docker/Dockerfile
          platforms: linux/amd64
          # Do not push pull requests
          push: ${{ (github.event_name != 'pull_request') }}
          build-args: |
            LABEL_VERSION=${{ steps.nbgv.outputs.SemVer2 }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/plexcleaner:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/plexcleaner:${{ steps.nbgv.outputs.SemVer2 }}
            ghcr.io/${{ github.repository_owner }}/plexcleaner:latest
            ghcr.io/${{ github.repository_owner }}/plexcleaner:${{ steps.nbgv.outputs.SemVer2 }}
      - name: 'Build and Push Develop'
        uses: docker/build-push-action@v2
        # Enable for develop branch only
        if: ${{ endsWith(github.ref, 'refs/heads/develop') }}
        with:
          context: ./Docker
          file: ./Docker/Dockerfile
          platforms: linux/amd64
          # Do not push pull requests
          push: ${{ (github.event_name != 'pull_request') }}
          build-args: |
            LABEL_VERSION=${{ steps.nbgv.outputs.SemVer2 }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/plexcleaner:develop
            ${{ secrets.DOCKER_HUB_USERNAME }}/plexcleaner:${{ steps.nbgv.outputs.SemVer2 }}
            ghcr.io/${{ github.repository_owner }}/plexcleaner:develop
            ghcr.io/${{ github.repository_owner }}/plexcleaner:${{ steps.nbgv.outputs.SemVer2 }}
